#!/bin/bash
#
# ##############################################################################
#
# Copyright (C) 2015 Opinsys Oy
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# ##############################################################################
#

set -eu

function usage {
    echo "
    usage: $(basename $0) [option]

    Resolve local puavo api server from dns. If the device type is laptop and
    dns resolve fails it will return the public server.

    --writable             Search for writable puavo-rest instance instead of a read-only slave
    --cloud-fallback       Fallback to cloud puavo-rest if bootserver dns lookup fails

    "
}

PROGRAM_NAME=puavo-resolve-api-server

OPT_WRITABLE=""
OPT_CLOUD_FALLBACK=""

TEMP=$(getopt -n $PROGRAM_NAME -o wch \
--long writable,cloud-fallback,help)

eval set -- "$TEMP"
while true; do
    case $1 in
        -w|--writable)
            OPT_WRITABLE=1; shift; continue
        ;;
        -c|--cloud-fallback)
            OPT_CLOUD_FALLBACK=1; shift; continue
        ;;
        -h|--help)
            usage
            exit 0
        ;;
        --)
            break
        ;;
        *)
            printf "Unknown option %s\n" "$1"
        ;;
    esac
done

puavo_domain=$(cat /etc/puavo/domain)

lookup_puavoapi() {
  dig +time=2 +tries=1 SRV _puavo-api._tcp.${puavo_domain} +search +short
}

# At the moment only the cloud API server is writable, so we skip the 
# query and just fallback to cloud server if write access is requested.
if [ -z "${OPT_WRITABLE}" ]; then
    if dig_res=$(lookup_puavoapi); then
        # dig might not exit with nonzero exit status even if the search fails,
        # instead it will just give an empty response.
        if [ -n "$dig_res" ]; then
            echo $dig_res | awk '{
                              sub(/\.$/, "")
                              printf "https://%s:%s\n", $4, $3
                            }'
            exit 0
        fi
    fi
fi

puavo_hosttype=$(cat /etc/puavo/hosttype)

# Fallback for laptops and wirelessaccesspoints that are not in the school
# network.
if [    "$puavo_hosttype" = "laptop"              \
     -o "$puavo_hosttype" = "wirelessaccesspoint" \
     -o -n "${OPT_CLOUD_FALLBACK}"                \
     -o -n "${OPT_WRITABLE}"                        ]; then
    echo "https://$puavo_domain"
    exit 0
fi

echo "Failed to resolve api server" >&2
exit 1
