#!/usr/bin/ruby1.9.1

require "socket"
require "optparse"
require "json"

require "puavo/etc"
require "puavo/api-server"

require "puavo/gems"
require "httparty"

def assert_exec(cmd)
  out = `#{ cmd }`
  if not $?.success?
    raise "Failed to execute '#{ cmd }'"
  end
  return out
end


options = {}

parser = OptionParser.new do |opts|
  opts.banner = "
  Usage: #{ File.basename(__FILE__) } [options]

  Print Puavo JSON Feed for the current device and user if any
  "

  opts.on("-s", "--api-server [URL]", "API server root") do |url|
    options[:api_server] = url
  end

  opts.on_tail("-h", "--help", "Show this message") do
    STDERR.puts opts
    exit
  end

end

parser.parse!

options[:api_server] ||= Puavo.resolve_api_server!

puts HTTParty.get("#{ options[:api_server] }/v3/devices/#{ Socket.gethostname }").to_json
